{"ast":null,"code":"const store = {\n  _state: {\n    profilePage: {\n      posts: [{\n        id: 1,\n        message: 'Hi, My name is Greg',\n        like: '15'\n      }, {\n        id: 2,\n        message: 'This is my first post',\n        like: '20'\n      }],\n      newPostText: ''\n    },\n    messagesPage: {\n      dialogs: [{\n        id: 1,\n        name: 'Valera'\n      }, {\n        id: 2,\n        name: 'Mark'\n      }, {\n        id: 3,\n        name: 'Elena'\n      }],\n      messages: [{\n        id: 1,\n        message: 'Hy My name is Petr'\n      }, {\n        id: 2,\n        message: 'MI dont belive youark'\n      }, {\n        id: 3,\n        message: 'Elena I dont belive you'\n      }]\n    }\n  },\n\n  getState() {\n    return this._state;\n  },\n\n  _callSubscriber() {\n    return 'state changed';\n  },\n\n  subscribe(observer) {\n    this._callSubscriber = observer;\n  },\n\n  dispatch(action) {\n    if (action.type === 'UPDATE-NEW-POST-TEXT') {\n      this._state.profilePage.newPostText = action.text;\n\n      this._callSubscriber(this.getState());\n    } else if (action.type === 'ADD-POST') {\n      const newPost = {\n        id: this._state.profilePage.posts.length + 1,\n        message: this._state.profilePage.newPostText,\n        like: 0\n      };\n\n      this._state.profilePage.posts.push(newPost);\n\n      this._state.profilePage.newPostText = '';\n\n      this._callSubscriber(this.getState());\n    }\n  }\n\n};\nexport const addPostActionCreate = () => {\n  return {\n    type: 'ADD-POST'\n  };\n};\nexport const onChengeElementActionCreate = text => {\n  return {\n    type: 'UPDATE-NEW-POST-TEXT',\n    text\n  };\n};\nexport default store;\nwindow.store = store; //  const state = {\n//     profilePage: {\n//         posts: [\n//             {\n//               id: 1,\n//               message: 'Hi, My name is Greg',\n//               like: '15'\n//             },\n//             {\n//               id: 2,\n//               message: 'This is my first post',\n//               like: '20'\n//             }\n//         ],\n//         newPostText: ''\n//      },\n//      messagesPage: {\n//         dialogs: [\n//             {\n//                 id: 1,\n//                 name: 'Valera'\n//             },\n//             {\n//                 id: 2,\n//                 name: 'Mark'\n//             },\n//             {\n//                 id: 3,\n//                 name: 'Elena'\n//             }\n//         ],\n//         messages: [\n//             {\n//                 id: 1,\n//                 message: 'Hy My name is Petr'\n//             },\n//             {\n//                 id: 2,\n//                 message: 'MI dont belive youark'\n//             },\n//             {\n//                 id: 3,\n//                 message: 'Elena I dont belive you'\n//             }\n//         ]\n//     }\n// }\n// export const addPost = ()=> {\n//     const newPost = {\n//         id: state.profilePage.posts.length+1,\n//         message: state.profilePage.newPostText,\n//         like: 0\n//     }\n//     state.profilePage.posts.push(newPost)\n//     state.profilePage.newPostText = ''\n//     rerenderEntireTree(state)\n// }\n// export const updateNewPostText = (newText)=> {\n//     state.profilePage.newPostText = newText\n//     rerenderEntireTree(state)\n// }\n// export const subscribe = observer => {\n//     rerenderEntireTree = observer\n// }\n//  export default state","map":{"version":3,"sources":["/Volumes/Samsung_T5/mac/Programming/IT_Kamasutra/way_of_samuray/src/Redux/Redux.jsx"],"names":["store","_state","profilePage","posts","id","message","like","newPostText","messagesPage","dialogs","name","messages","getState","_callSubscriber","subscribe","observer","dispatch","action","type","text","newPost","length","push","addPostActionCreate","onChengeElementActionCreate","window"],"mappings":"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","sourcesContent":["const store = {\n    _state: {\n        profilePage: {\n            posts: [\n                {\n                  id: 1,\n                  message: 'Hi, My name is Greg',\n                  like: '15'\n                },\n                {\n                  id: 2,\n                  message: 'This is my first post',\n                  like: '20'\n                }\n            ],\n            newPostText: ''\n         },\n         messagesPage: {\n            dialogs: [\n                {\n                    id: 1,\n                    name: 'Valera'\n                },\n                {\n                    id: 2,\n                    name: 'Mark'\n                },\n                {\n                    id: 3,\n                    name: 'Elena'\n                }\n            ],\n            messages: [\n                {\n                    id: 1,\n                    message: 'Hy My name is Petr'\n                },\n                {\n                    id: 2,\n                    message: 'MI dont belive youark'\n                },\n                {\n                    id: 3,\n                    message: 'Elena I dont belive you'\n                }\n            ]\n        }\n    },\n    getState() {\n        return this._state\n    },\n    _callSubscriber() {\n        return ('state changed')\n    },\n    subscribe(observer) {\n        this._callSubscriber = observer\n    },\n    dispatch(action) {\n\n        if (action.type === 'UPDATE-NEW-POST-TEXT') {\n            this._state.profilePage.newPostText = action.text\n            this._callSubscriber(this.getState())\n        } else if (action.type === 'ADD-POST') {\n            const newPost = {\n                id: this._state.profilePage.posts.length+1,\n                message: this._state.profilePage.newPostText,\n                like: 0\n            }\n            this._state.profilePage.posts.push(newPost)\n            this._state.profilePage.newPostText = ''\n            this._callSubscriber(this.getState())\n        }\n    }\n}\n\n\n\nexport const addPostActionCreate = ()=> {\n    return {type: 'ADD-POST'}\n}\n  \nexport const onChengeElementActionCreate = (text)=> {\n    return {type: 'UPDATE-NEW-POST-TEXT', text}\n}\n\n    \nexport default store\nwindow.store = store\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//  const state = {\n//     profilePage: {\n//         posts: [\n//             {\n//               id: 1,\n//               message: 'Hi, My name is Greg',\n//               like: '15'\n//             },\n//             {\n//               id: 2,\n//               message: 'This is my first post',\n//               like: '20'\n//             }\n//         ],\n//         newPostText: ''\n//      },\n//      messagesPage: {\n//         dialogs: [\n//             {\n//                 id: 1,\n//                 name: 'Valera'\n//             },\n//             {\n//                 id: 2,\n//                 name: 'Mark'\n//             },\n//             {\n//                 id: 3,\n//                 name: 'Elena'\n//             }\n//         ],\n//         messages: [\n//             {\n//                 id: 1,\n//                 message: 'Hy My name is Petr'\n//             },\n//             {\n//                 id: 2,\n//                 message: 'MI dont belive youark'\n//             },\n//             {\n//                 id: 3,\n//                 message: 'Elena I dont belive you'\n//             }\n//         ]\n//     }\n// }\n\n// export const addPost = ()=> {\n//     const newPost = {\n//         id: state.profilePage.posts.length+1,\n//         message: state.profilePage.newPostText,\n//         like: 0\n//     }\n//     state.profilePage.posts.push(newPost)\n//     state.profilePage.newPostText = ''\n//     rerenderEntireTree(state)\n// }\n\n// export const updateNewPostText = (newText)=> {\n//     state.profilePage.newPostText = newText\n//     rerenderEntireTree(state)\n// }\n\n// export const subscribe = observer => {\n//     rerenderEntireTree = observer\n// }\n\n//  export default state"]},"metadata":{},"sourceType":"module"}